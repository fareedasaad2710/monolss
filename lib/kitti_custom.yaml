dataset:
  type: "kitti"
  data_dir: "nuscenes_in_kitti/train"
  root_dir: "/kaggle/input/kitti-dataset" # Base path to dataset
  label_dir: "/kaggle/input/kitti-dataset/nuscenes_in_kitti/train/label_2"
  velodyne_dir: "/kaggle/input/kitti-dataset/nuscenes_in_kitti/train/velodyne"
  image_dir: "/kaggle/input/kitti-dataset/nuscenes_in_kitti/train/image_2" # This path seems to work
  eval_cls: ["Car", "car"]
  #  eval_cls: ['Car','Pedestrian','Cyclist']
  batch_size: 16
  num_workers: 4 # Reduced for Kaggle environment
  class_merging: True
  use_dontcare: False
  use_3d_center: True
  writelist:
    [
      "Car",
      "Pedestrian",
      "Cyclist",
      "car",
      "truck",
      "motorcycle",
      "pedestrian",
      "cyclist",
    ]
  random_flip: 0.5
  random_crop: 0.5
  scale: 0.4
  shift: 0.1
  drop_last_val: True

model:
  type: "MonoLSS"
  backbone: "dla34"
  neck: "DLAUp"

optimizer:
  type: "adam"
  lr: 0.001
  weight_decay: 0.00001

lr_scheduler:
  warmup: True # 5 epoches, cosine warmup, init_lir=0.00001 in default
  decay_rate: 0.1
  decay_list: [240, 360, 480]

trainer:
  max_epoch: 600
  eval_start: 10
  eval_frequency: 10 # evaluation interval (in epoch)
  save_frequency: 10 # checkpoint save interval (in epoch)
  disp_frequency: 50 # display interval (in batch)
  log_dir: "/kaggle/working/monolss/logs/" # Updated for Kaggle
  out_dir: "/kaggle/working/monolss/output/" # Updated for Kaggle
  # resume_model: ''

tester:
  threshold: 0.2 # confidence filter
  out_dir: "/kaggle/working/monolss/testset_out" # Updated for Kaggle
  resume_model: "monolss.pth" # pre-trained model path
